"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Method = require("web3-core-method");
var _ = require("underscore");
var Accounts = require("web3-tolar-accounts");
var TolarAccounts = /** @class */ (function (_super) {
    __extends(TolarAccounts, _super);
    function TolarAccounts(web3) {
        var _this = _super.call(this, web3) || this;
        _this.web3 = web3;
        _this.methods = [
            new Method({
                name: "createRemote",
                call: "account_create",
                params: 1,
            }),
            new Method({
                name: "openRemote",
                call: "account_open",
                params: 1,
            }),
            new Method({
                name: "listAddresses",
                call: "account_listAddresses",
                params: 0,
            }),
            new Method({
                name: "verifyAddress",
                call: "account_verifyAddress",
                params: 1,
            }),
            new Method({
                name: "createNewAddress",
                call: "account_createNewAddress",
                params: 3,
                inputFormatter: [null, null, null],
            }),
            new Method({
                name: "exportKeyFile",
                call: "account_exportKeyFile",
                params: 1,
            }),
            new Method({
                name: "importKeyFile",
                call: "account_importKeyFile",
                inputFormatter: [function (a) { return a; }, null, function (a) { return a || ""; }, null],
                params: 4,
            }),
            new Method({
                name: "listBalancePerAddress",
                call: "account_listBalancePerAddress",
                params: 0,
            }),
            new Method({
                name: "sendRawTransaction",
                call: "account_sendRawTransaction",
                params: 8,
            }),
            new Method({
                name: "changePassword",
                call: "account_changePassword",
                params: 2,
            }),
            new Method({
                name: "changeAddressPassword",
                call: "account_changeAddressPasswords",
                params: 3,
            }),
            new Method({
                name: "sendFundTransferTransaction",
                call: "account_sendFundTransferTransaction",
                params: 7,
            }),
            new Method({
                name: "sendDeployContractTransaction",
                call: "account_sendDeployContractTransaction",
                params: 7,
            }),
            new Method({
                name: "sendExecuteFunctionTransaction",
                call: "account_sendExecuteFunctionTransaction",
                params: 8,
            }),
            new Method({
                name: "getHashHex",
                call: "util_getHashHex",
                params: 1,
            }),
        ];
        _this.extendAccounts();
        return _this;
    }
    TolarAccounts.prototype.extendAccounts = function () {
        var _this = this;
        _.each(this.methods, function (method) {
            method.attachToObject(_this);
            method.setRequestManager(_this.web3._requestManager);
        });
    };
    return TolarAccounts;
}(Accounts));
exports.TolarAccounts = TolarAccounts;
//# sourceMappingURL=tolar-account.js.map